from dataclasses import dataclass, field

from direction import Direction


class Element:
    pass


class Void(Element):
    def __str__(self) -> str:
        return "‚¨ú"


class Rock(Element):
    def __str__(self) -> str:
        return "ü™®"


class Star(Element):
    def __str__(self) -> str:
        return "üåü"


@dataclass
class Tile(Element):
    passed: bool = False
    passed_direction: Direction = Direction.UP
    edges: list[Direction] = field(default_factory=list)

    def __str__(self) -> str:
        if not self.passed:
            return "‚¨õ"
        match self.passed_direction:
            # the arrows emojis are weird, they seem as two characters, but behaves as one?
            # can be compensated by adding a space after the emoji
            case Direction.UP:
                return "‚¨ÜÔ∏è "
            case Direction.DOWN:
                return "‚¨áÔ∏è "
            case Direction.LEFT:
                return "‚¨ÖÔ∏è "
            case Direction.RIGHT:
                return "‚û°Ô∏è "
